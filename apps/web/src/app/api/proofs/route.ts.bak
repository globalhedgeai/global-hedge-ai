import { NextRequest, NextResponse } from "next/server";
import * as path from "node:path";
import * as fs from "node:fs/promises";

function contentTypeByExt(p: string) {
  const ext = path.extname(p).toLowerCase();
  switch (ext) {
    case ".png": return "image/png";
    case ".jpg":
    case ".jpeg": return "image/jpeg";
    case ".webp": return "image/webp";
    case ".gif": return "image/gif";
    default: return "application/octet-stream";
  }
}

export async function GET(req: NextRequest) {
  const { searchParams } = new URL(req.url);
  const raw = searchParams.get("key") || "";
  const key = raw.replace(/^\/+/, ""); // احذف السلاشات الأولى
  if (!key || !key.startsWith("uploads/")) {
    return NextResponse.json({ ok: false, error: "invalid key" }, { status: 400 });
    }

  const abs = path.join(process.cwd(), "public", key);
  try {
    const data = await fs.readFile(abs); // Buffer
    const ct = contentTypeByExt(abs);
    return new NextResponse(new Uint8Array(data), {
      headers: {
        "content-type": ct,
        "cache-control": "public, max-age=31536000, immutable",
      },
    });
  } catch {
    return NextResponse.json({ ok: false, error: "not found" }, { status: 404 });
  }
}
