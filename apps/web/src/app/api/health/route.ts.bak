import { NextResponse } from "next/server";
import { prisma } from '@/lib/prisma';
import * as fs from "node:fs/promises";
import * as path from "node:path";

type Health = { ok: boolean; db?: string; fs?: string };

export async function GET() {
  const details: Health = { ok: true };

  try {
    // DB check (SQLite: select 1)
    await prisma.$queryRaw`SELECT 1`;
    details.db = "ok";
  } catch (e: unknown) {
    details.ok = false;
    details.db = e instanceof Error ? e.message : "db error";
  }

  try {
    // FS write check to /public/uploads
    const dir = path.join(process.cwd(), "public", "uploads");
    await fs.mkdir(dir, { recursive: true });
    const p = path.join(dir, ".__health.tmp");
    await fs.writeFile(p, "ok");
    await fs.unlink(p);
    details.fs = "ok";
  } catch (e: unknown) {
    details.ok = false;
    details.fs = e instanceof Error ? e.message : "fs error";
  }

  return NextResponse.json(details, { status: details.ok ? 200 : 500 });
}



